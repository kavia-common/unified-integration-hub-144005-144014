{"is_source_file": true, "format": "Python", "description": "This Python source file implements a FastAPI-based backend service for managing integrations with Atlassian Jira and Confluence. It provides endpoints for health checks, root access, and configuring/testing Jira and Confluence credentials via in-memory storage and HTTP requests. The code includes logic for constructing HTTP headers, performing basic authentication tests, and handling CORS configuration.", "external_files": ["fastapi", "fastapi.middleware.cors", "pydantic", "base64", "http.client", "urllib.parse", "os"], "external_methods": ["fastapi.FastAPI", "fastapi.HTTPException", "fastapi.middleware.cors.CORSMiddleware", "pydantic.BaseModel", "pydantic.Field", "pydantic.HttpUrl", "base64.b64encode", "http.client.HTTPSConnection", "http.client.HTTPConnection", "http.client.HTTPResponse", "urllib.parse.urlparse", "os.getenv"], "published": ["app", "HealthResponse", "IntegrationConfigRequest", "IntegrationTestResponse"], "classes": [{"name": "HealthResponse", "description": "Response model for health checks."}, {"name": "IntegrationConfigRequest", "description": "Model representing configuration data for Jira and Confluence integration, including base URL, email/username, and API token."}, {"name": "IntegrationTestResponse", "description": "Model indicating success/failure of testing the integration credentials."}], "methods": [{"name": "str _basic_auth_header(username: str, token: str)", "description": "Builds a Basic authorization header value for Atlassian APIs by encoding username and token.", "scope": "", "scopeKind": ""}, {"name": "int _http_get(host: str, path: str, scheme: str, headers: Dict[str, str])", "description": "Performs an HTTP GET request using http.client, returning the HTTP status code.", "scope": "", "scopeKind": ""}, {"name": "(bool,str) _test_atlassian_basic(base_url: str, username: str, api_token: str, service: str)", "description": "Performs a minimal authentication test against Jira or Confluence cloud endpoints using provided credentials.", "scope": "", "scopeKind": ""}, {"name": "read_root()", "description": "Root endpoint returning a greeting message to confirm API is running.", "scope": "", "scopeKind": ""}, {"name": "health()", "description": "Health check endpoint returning the current status ('ok').", "scope": "", "scopeKind": ""}, {"name": "docs_status()", "description": "Endpoint returning a simple status indicating documentation schema and app responsiveness.", "scope": "", "scopeKind": ""}, {"name": "configure_jira(payload: IntegrationConfigRequest)", "description": "Endpoint to configure Jira credentials, perform a test API call, and store the result.", "scope": "", "scopeKind": ""}, {"name": "configure_confluence(payload: IntegrationConfigRequest)", "description": "Endpoint to configure Confluence credentials, perform a test API call, and store the result.", "scope": "", "scopeKind": ""}, {"name": "None _on_startup()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fastapi.FastAPI", "fastapi.HTTPException", "fastapi.middleware.cors.CORSMiddleware", "pydantic.BaseModel", "pydantic.Field", "base64.b64encode", "http.client.HTTPSConnection", "http.client.HTTPConnection", "http.client.HTTPResponse.read", "urllib.parse.urlparse", "os.getenv"], "search-terms": ["FastAPI app initialization", "Jira integration", "Confluence integration", "test API connectivity", "health endpoint", "CORS middleware"], "state": 2, "file_id": 3, "knowledge_revision": 26, "git_revision": "9c93dbba7b300e4d28b874653966bad2557c822a", "revision_history": [{"7": ""}, {"20": "1b3725a07a8f8188ca9cc3bacd080b8b2a0205a9"}, {"24": "136f79ccef0c27f3958af54c25dcdbb6056dfae9"}, {"25": "136f79ccef0c27f3958af54c25dcdbb6056dfae9"}, {"26": "9c93dbba7b300e4d28b874653966bad2557c822a"}], "ctags": [{"_type": "tag", "name": "HealthResponse", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^class HealthResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "IntegrationConfigRequest", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^class IntegrationConfigRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "IntegrationTestResponse", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^class IntegrationTestResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_INTEGRATION_STORE", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^_INTEGRATION_STORE: Dict[str, Dict[str, str]] = {}$/", "language": "Python", "typeref": "typename:Dict[str, Dict[str, str]]", "kind": "variable"}, {"_type": "tag", "name": "_allowed_origins_env", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^_allowed_origins_env = os.getenv(\"ALLOWED_ORIGINS\", \"\").strip()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_basic_auth_header", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def _basic_auth_header(username: str, token: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(username: str, token: str)"}, {"_type": "tag", "name": "_http_get", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def _http_get(host: str, path: str, scheme: str, headers: Dict[str, str]) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "function", "signature": "(host: str, path: str, scheme: str, headers: Dict[str, str])"}, {"_type": "tag", "name": "_on_startup", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^async def _on_startup() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "_test_atlassian_basic", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def _test_atlassian_basic(base_url: str, username: str, api_token: str, service: str) -> (bool, /", "language": "Python", "typeref": "typename:(bool,str)", "kind": "function", "signature": "(base_url: str, username: str, api_token: str, service: str)"}, {"_type": "tag", "name": "allowed_origins", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^allowed_origins: List[str] = [\"*\"] if not _allowed_origins_env else [o.strip() for o in _allowed/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable"}, {"_type": "tag", "name": "apiToken", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    apiToken: str = Field(..., description=\"API token or personal access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "IntegrationConfigRequest", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "baseUrl", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    baseUrl: HttpUrl = Field(..., description=\"Base URL of the service, e.g. https:\\/\\/your-doma/", "language": "Python", "typeref": "typename:HttpUrl", "kind": "variable", "scope": "IntegrationConfigRequest", "scopeKind": "class"}, {"_type": "tag", "name": "configure_confluence", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def configure_confluence(payload: IntegrationConfigRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: IntegrationConfigRequest)"}, {"_type": "tag", "name": "configure_jira", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def configure_jira(payload: IntegrationConfigRequest):$/", "language": "Python", "kind": "function", "signature": "(payload: IntegrationConfigRequest)"}, {"_type": "tag", "name": "docs_status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def docs_status():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "email_or_username", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    email_or_username: str = Field(..., description=\"Email (for Atlassian) or username as requir/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "IntegrationConfigRequest", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def health():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "message", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    message: str = Field(..., description=\"Human-friendly message about the test result\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "IntegrationTestResponse", "scopeKind": "class"}, {"_type": "tag", "name": "read_root", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^def read_root():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    status: str = Field(..., description=\"Overall service status string, e.g. 'ok' or 'error'.\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "HealthResponse", "scopeKind": "class"}, {"_type": "tag", "name": "success", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/main.py", "pattern": "/^    success: bool = Field(..., description=\"True if the test connection succeeded, else False\")$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "IntegrationTestResponse", "scopeKind": "class"}], "hash": "ab10ea003dd859e72b55643a742d19aa", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/main.py", "fields": [{"name": "Dict[str, Dict[str, str]] _INTEGRATION_STORE", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_allowed_origins_env = os.getenv(\"ALLOWED_ORIGINS\", \"\").strip()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[str] allowed_origins", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str apiToken", "scope": "IntegrationConfigRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "HttpUrl baseUrl", "scope": "IntegrationConfigRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str email_or_username", "scope": "IntegrationConfigRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str message", "scope": "IntegrationTestResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "str status", "scope": "HealthResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "bool success", "scope": "IntegrationTestResponse", "scopeKind": "class", "description": "unavailable"}]}