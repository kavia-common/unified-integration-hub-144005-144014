{"is_source_file": true, "format": "Python", "description": "This file provides a client implementation for interacting with Jira's REST API, including OAuth2 authentication, issue search, and issue creation functionalities. It manages connection credentials, handles HTTP requests asynchronously, and defines functions for obtaining tokens, searching issues, and creating issues within Jira.", "external_files": [".../repositories/connections_repo.py", ".../models/connection.py", ".../core/config.py"], "external_methods": ["get_connection", "upsert_connection"], "published": ["build_authorize_url", "exchange_code_for_tokens", "search_issues", "create_issue"], "classes": [{"name": "Connection", "description": "Represents a connection to an external service, including authentication credentials and metadata.", "attributes": ["tenant_id", "connector_id", "credentials", "metadata", "refreshed_at"]}, {"name": "Credentials", "description": "Holds authentication tokens and related info for a connection.", "attributes": ["access_token", "refresh_token", "token_expires_at", "site_url", "scopes"]}], "methods": [{"name": "Dict[str,str] _headers(token: str)", "description": "Constructs HTTP headers with Authorization using the provided token.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] build_authorize_url(state: str)", "description": "Generates the OAuth2 authorization URL for Jira.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] exchange_code_for_tokens(tenant_id: str, code: str)", "description": "Exchanges an OAuth2 authorization code for tokens and establishes a connection.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] search_issues(tenant_id: str, query: str, page: int = 1, per_page: int = 20)", "description": "Searches for issues in Jira matching the provided query with pagination.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] create_issue(tenant_id: str, payload: Dict[str, Any])", "description": "Creates a new Jira issue with the specified payload.", "scope": "", "scopeKind": ""}], "calls": ["httpx.AsyncClient", "client.post", "client.get", "resp.raise_for_status", "res.json", "upsert_connection", "get_connection"], "search-terms": ["Jira OAuth client", "issue search", "issue creation", "OAuth token exchange", "async HTTP requests", "Connection management"], "state": 2, "file_id": 13, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "ATL_AUTH_URL", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^ATL_AUTH_URL = \"https:\\/\\/auth.atlassian.com\\/authorize\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ATL_TOKEN_URL", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^ATL_TOKEN_URL = \"https:\\/\\/auth.atlassian.com\\/oauth\\/token\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CLOUD_API", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^CLOUD_API = \"https:\\/\\/api.atlassian.com\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "JIRA_SCOPES", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^JIRA_SCOPES = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^def _headers(token: str) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "build_authorize_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^async def build_authorize_url(state: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(state: str)"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^async def create_issue(tenant_id: str, payload: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(tenant_id: str, payload: Dict[str, Any])"}, {"_type": "tag", "name": "exchange_code_for_tokens", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^async def exchange_code_for_tokens(tenant_id: str, code: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(tenant_id: str, code: str)"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira/client.py", "pattern": "/^async def search_issues(tenant_id: str, query: str, page: int = 1, per_page: int = 20) -> Dict[s/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(tenant_id: str, query: str, page: int = 1, per_page: int = 20)"}], "hash": "57f5e64b1f9afa39c018299bd7b6ba8f", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/connectors/jira/client.py", "fields": [{"name": "ATL_AUTH_URL = \"https:\\/\\/auth.atlassian.com\\/authorize\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ATL_TOKEN_URL = \"https:\\/\\/auth.atlassian.com\\/oauth\\/token\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CLOUD_API = \"https:\\/\\/api.atlassian.com\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "JIRA_SCOPES = [", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"26": ""}]}