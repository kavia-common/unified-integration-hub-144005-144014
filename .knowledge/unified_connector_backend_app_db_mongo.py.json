{"is_source_file": true, "format": "Python", "description": "This file provides database utility functions for interacting with a MongoDB database using the Motor async driver. It includes functions for obtaining database connection clients, retrieving collections, and performing CRUD operations on connection documents related to connector integrations.", "external_files": ["motor.motor_asyncio"], "external_methods": ["os.getenv", "datetime.utcnow", "AsyncIOMotorClient"], "published": ["get_mongo_url", "get_db_name", "get_client", "get_db", "connections_collection", "upsert_connection", "get_connection", "delete_connection"], "classes": [], "methods": [{"name": "str get_mongo_url()", "description": "Retrieves the MongoDB connection URL from environment variables, with a default fallback.", "scope": "", "scopeKind": ""}, {"name": "str get_db_name()", "description": "Retrieves the database name from environment variables, with a default fallback.", "scope": "", "scopeKind": ""}, {"name": "AsyncIOMotorClient get_client()", "description": "Returns a singleton instance of the AsyncIOMotorClient, creating it if necessary.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Returns the database object.", "scope": "", "scopeKind": ""}, {"name": "connections_collection()", "description": "Returns the MongoDB collection for connector connections.", "scope": "", "scopeKind": ""}, {"name": "upsert_connection(tenant_id: str, connector_id: str, credentials: Dict[str, Any], metadata: Optional[Dict[str, Any]] = None)", "description": "Asynchronously inserts or updates a connector connection document in MongoDB.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_connection(tenant_id: str, connector_id: str)", "description": "Asynchronously retrieves a connector connection document from MongoDB.", "scope": "", "scopeKind": ""}, {"name": "delete_connection(tenant_id: str, connector_id: str)", "description": "Asynchronously deletes a connector connection from MongoDB.", "scope": "", "scopeKind": ""}], "calls": ["os.getenv", "datetime.utcnow", "AsyncIOMotorClient", "connections_collection().update_one", "connections_collection().find_one", "connections_collection().delete_one"], "search-terms": ["mongo_asyncio", "connections_collection", "upsert_connection", "get_connection", "delete_connection", "mongodb_util"], "state": 2, "file_id": 5, "knowledge_revision": 11, "git_revision": "", "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^_client: Optional[AsyncIOMotorClient] = None$/", "language": "Python", "typeref": "typename:Optional[AsyncIOMotorClient]", "kind": "variable"}, {"_type": "tag", "name": "connections_collection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def connections_collection():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def delete_connection(tenant_id: str, connector_id: str):$/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "get_client", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_client() -> AsyncIOMotorClient:$/", "language": "Python", "typeref": "typename:AsyncIOMotorClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def get_connection(tenant_id: str, connector_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db_name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_db_name() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_mongo_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_mongo_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "upsert_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def upsert_connection(tenant_id: str, connector_id: str, credentials: Dict[str, Any], meta/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str, credentials: Dict[str, Any], metadata: Optional[Dict[str, Any]] = None)"}], "hash": "812dca66816ace4bf0329896defbd534", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/db/mongo.py", "fields": [{"name": "Optional[AsyncIOMotorClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"11": ""}]}