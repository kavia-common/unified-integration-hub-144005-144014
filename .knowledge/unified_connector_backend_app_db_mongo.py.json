{"is_source_file": true, "format": "Python", "description": "This file contains functions for interacting with a MongoDB database, specifically for managing connector connections and OAuth configurations. It includes functions to get database clients, perform CRUD operations on collections, and handle connection credentials and metadata.", "external_files": ["motor.motor_asyncio", "os", "datetime"], "external_methods": ["motor.motor_asyncio.AsyncIOMotorClient", "os.getenv", "datetime.utcnow"], "published": ["get_mongo_url", "get_db_name", "get_client", "get_db", "connections_collection", "configs_collection", "upsert_connection", "get_connection", "delete_connection", "upsert_oauth_config", "get_oauth_config"], "classes": [], "methods": [{"name": "str get_mongo_url()", "description": "Retrieves the MongoDB connection URL from environment variables, with a default fallback.", "scope": "", "scopeKind": ""}, {"name": "str get_db_name()", "description": "Retrieves the MongoDB database name from environment variables, with a default fallback.", "scope": "", "scopeKind": ""}, {"name": "AsyncIOMotorClient get_client()", "description": "Initializes and returns a singleton instance of the MongoDB client.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Returns the database object from the MongoDB client.", "scope": "", "scopeKind": ""}, {"name": "connections_collection()", "description": "Returns the 'connector_connections' collection.", "scope": "", "scopeKind": ""}, {"name": "configs_collection()", "description": "Returns the 'connector_configs' collection.", "scope": "", "scopeKind": ""}, {"name": "upsert_connection(tenant_id: str, connector_id: str, credentials: Dict[str, Any], metadata: Optional[Dict[str, Any]] = None)", "description": "Creates or updates a connector connection document in the database.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_connection(tenant_id: str, connector_id: str)", "description": "Fetches a specific connector connection document.", "scope": "", "scopeKind": ""}, {"name": "delete_connection(tenant_id: str, connector_id: str)", "description": "Deletes a specific connector connection document.", "scope": "", "scopeKind": ""}, {"name": "upsert_oauth_config(tenant_id: str, connector_id: str, config: Dict[str, Any])", "description": "Creates or updates OAuth configuration for a connector.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] get_oauth_config(tenant_id: str, connector_id: str)", "description": "Retrieves OAuth configuration for a given connector.", "scope": "", "scopeKind": ""}], "calls": ["get_mongo_url", "get_client", "connections_collection().update_one", "connections_collection().find_one", "connections_collection().delete_one", "configs_collection().update_one", "configs_collection().find_one"], "search-terms": ["MongoDB connection", "connector connections", "OAuth configuration", "async database operations", "motor async MongoDB"], "state": 2, "file_id": 5, "knowledge_revision": 43, "git_revision": "2539d54dd1667971fa4bf833ba0fc9e29cf31bd2", "revision_history": [{"11": ""}, {"42": "2539d54dd1667971fa4bf833ba0fc9e29cf31bd2"}, {"43": "2539d54dd1667971fa4bf833ba0fc9e29cf31bd2"}], "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^_client: Optional[AsyncIOMotorClient] = None$/", "language": "Python", "typeref": "typename:Optional[AsyncIOMotorClient]", "kind": "variable"}, {"_type": "tag", "name": "configs_collection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def configs_collection():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "connections_collection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def connections_collection():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "delete_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def delete_connection(tenant_id: str, connector_id: str):$/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "get_client", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_client() -> AsyncIOMotorClient:$/", "language": "Python", "typeref": "typename:AsyncIOMotorClient", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def get_connection(tenant_id: str, connector_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db_name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_db_name() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_mongo_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^def get_mongo_url() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_oauth_config", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def get_oauth_config(tenant_id: str, connector_id: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "upsert_connection", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def upsert_connection(tenant_id: str, connector_id: str, credentials: Dict[str, Any], meta/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str, credentials: Dict[str, Any], metadata: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "upsert_oauth_config", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/db/mongo.py", "pattern": "/^async def upsert_oauth_config(tenant_id: str, connector_id: str, config: Dict[str, Any]):$/", "language": "Python", "kind": "function", "signature": "(tenant_id: str, connector_id: str, config: Dict[str, Any])"}], "hash": "e8996907f1751b2e87bb8674ae8f46bb", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/db/mongo.py", "fields": [{"name": "Optional[AsyncIOMotorClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}]}