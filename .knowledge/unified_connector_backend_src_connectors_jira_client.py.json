{"is_source_file": true, "format": "Python", "description": "A Python module implementing a client for Jira Cloud REST API, providing methods to search issues, list projects, and create issues, using async HTTP calls with httpx.", "external_files": ["src.core.response"], "external_methods": ["normalize_upstream_error"], "published": ["JiraClient"], "classes": [{"name": "JiraClient", "description": "A client class for interacting with Jira Cloud REST API, encapsulating methods for searching issues, listing projects, and creating issues with support for async operations."}], "methods": [{"name": "__init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "description": "Constructor initializing JiraClient with access token, cloud ID, base URL, and timeout.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Generates HTTP headers including Authorization and content types for requests.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _url(self, path: str)", "description": "Constructs the full API URL based on endpoint path.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues(self, jql: str)", "description": "Performs an async search for issues using JQL, returning issue data or error information.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_projects(self)", "description": "Retrieves a list of projects accessible to the user asynchronously.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "description": "Creates a new Jira issue in the specified project with optional description asynchronously.", "scope": "JiraClient", "scopeKind": "class"}], "calls": ["httpx.AsyncClient", "client.get", "client.post", "normalize_upstream_error"], "search-terms": ["JiraClient", "Jira REST API", "async", "httpx", "issue search", "project list", "create issue"], "state": 2, "file_id": 13, "knowledge_revision": 64, "git_revision": "379774def9059dafe18d2301fc45048fa432be1e", "revision_history": [{"40": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"52": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"64": "379774def9059dafe18d2301fc45048fa432be1e"}], "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: f/", "language": "Python", "kind": "member", "signature": "(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", descri/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_projects(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def search_issues(self, jql: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "b6c5c08792568489f6bb9f4406c89d19", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/client.py"}