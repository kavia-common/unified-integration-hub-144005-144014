{"is_source_file": true, "format": "Python", "description": "This file implements a client class for interacting with Jira's REST API using async HTTP requests. It provides methods to search issues, list projects, and create issues within Jira Cloud, handling authorization and API endpoint URL composition.", "external_files": ["src.core.response"], "external_methods": ["normalize_upstream_error"], "published": ["JiraClient"], "classes": [{"name": "JiraClient", "description": "A client class for performing asynchronous operations with Jira Cloud REST API, including issue searching, project listing, and issue creation."}], "methods": [{"name": "__init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "description": "Initializes the JiraClient with access token, cloud ID, optional base URL, and timeout.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Returns the authorization and content-type headers for API requests.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _url(self, path: str)", "description": "Constructs a full API URL for a given path, based on the base URL and cloud ID.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues(self, jql: str, start_at: int = 0, max_results: int = 50)", "description": "Asynchronously searches Jira issues using JQL with pagination support.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_projects(self, start_at: int = 0, max_results: int = 50)", "description": "Asynchronously retrieves a list of projects visible to the user.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "description": "Asynchronously creates a Jira issue in a specified project with optional description.", "scope": "JiraClient", "scopeKind": "class"}], "calls": ["httpx.AsyncClient", "normalize_upstream_error", "resp.status_code", "resp.text", "resp.json()", "client.get", "client.post"], "search-terms": ["JiraClient", "Jira REST API", "asyncio", "httpx", "issue search", "project listing", "issue creation"], "state": 2, "file_id": 13, "knowledge_revision": 73, "git_revision": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf", "revision_history": [{"40": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"52": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"64": "379774def9059dafe18d2301fc45048fa432be1e"}, {"73": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf"}], "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: f/", "language": "Python", "kind": "member", "signature": "(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", descri/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_projects(self, start_at: int = 0, max_results: int = 50) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, start_at: int = 0, max_results: int = 50)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def search_issues(self, jql: str, start_at: int = 0, max_results: int = 50) -> Dict[st/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str, start_at: int = 0, max_results: int = 50)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "0afc284ee1aa052ddaa8d25b46b39ee3", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/client.py"}