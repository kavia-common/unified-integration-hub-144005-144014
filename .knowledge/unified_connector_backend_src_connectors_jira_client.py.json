{"is_source_file": true, "format": "Python", "description": "This source file implements a Python class `JiraClient` that provides an interface to interact with Jira Cloud's REST API. It includes methods to search issues, list projects, and create issues, utilizing the httpx asynchronous HTTP client. The class handles authentication via Bearer tokens and constructs appropriate API URLs and headers.", "external_files": ["httpx"], "external_methods": ["httpx.AsyncClient"], "published": ["JiraClient"], "classes": [{"name": "JiraClient", "description": "A client for interacting with Jira Cloud REST API. Handles authorization, endpoint URL construction, and provides methods for common Jira operations like search issues, list projects, and create issue."}], "methods": [{"name": "__init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "description": "Initializes the JiraClient with access token, cloud ID, optional base URL, and timeout.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Constructs and returns HTTP headers including authorization for API requests.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "str _url(self, path: str)", "description": "Constructs complete API URL for a given API path based on the base URL and cloud ID.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_issues(self, jql: str)", "description": "Performs an asynchronous search for issues matching the provided JQL string.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_projects(self)", "description": "Retrieves a list of projects visible to the authenticated user.", "scope": "JiraClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "description": "Creates a new Jira issue in a specified project with optional description and default issue type Task.", "scope": "JiraClient", "scopeKind": "class"}], "calls": ["httpx.AsyncClient", "client.get", "client.post"], "search-terms": ["JiraClient", "Jira API", "Jira Cloud", "search issues", "create issue", "list projects", "async", "httpx"], "state": 2, "file_id": 13, "knowledge_revision": 52, "git_revision": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2", "revision_history": [{"40": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"52": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}], "ctags": [{"_type": "tag", "name": "JiraClient", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^class JiraClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def __init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: f/", "language": "Python", "kind": "member", "signature": "(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    def _url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def create_issue(self, project_key: str, summary: str, issuetype: str = \"Task\", descri/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, project_key: str, summary: str, issuetype: str = \"Task\", description: Optional[str] = None)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def list_projects(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_issues", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/client.py", "pattern": "/^    async def search_issues(self, jql: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, jql: str)", "scope": "JiraClient", "scopeKind": "class"}], "hash": "fd61a845dd8e837b96aceb614c67cb27", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/client.py"}