{"is_source_file": true, "format": "Python", "description": "This file provides middleware and utility functions for observability in a FastAPI-based web service. It manages request tracing via context variables, collects in-memory metrics, and configures structured logging with request context information.", "external_files": ["fastapi.Request", "fastapi.Response", "starlette.middleware.base.BaseHTTPMiddleware"], "external_methods": ["logging.getLogger", "logging.Filter", "uuid.uuid4", "time.perf_counter"], "published": ["metrics_snapshot", "increment_metric", "observe_latency", "get_current_request_id", "get_current_tenant_id", "mask_secret_value", "get_structured_logger"], "classes": [{"name": "RequestContextMiddleware", "description": "FastAPI middleware class that attaches request IDs, tenant IDs, and route info to the request context, while logging request lifecycle events."}, {"name": "_ContextFilter", "description": "Logging filter that injects request context attributes into log records for structured logging."}], "methods": [{"name": "Dict[str,float] metrics_snapshot()", "description": "Returns a copy of current metrics counters and gauges.", "scope": "", "scopeKind": ""}, {"name": "None increment_metric(name: str, inc: float = 1.0)", "description": "Increments a named metric by a specified amount.", "scope": "", "scopeKind": ""}, {"name": "None observe_latency(name: str, ms: float)", "description": "Records latency measurement in milliseconds for a specific metric.", "scope": "", "scopeKind": ""}, {"name": "str get_current_request_id()", "description": "Retrieves the current request ID from the context variable.", "scope": "", "scopeKind": ""}, {"name": "str get_current_tenant_id()", "description": "Retrieves the current tenant ID from the context variable.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] mask_secret_value(value: Optional[str], keep: int = 4)", "description": "Masks sensitive secret values, keeping the last N characters visible.", "scope": "", "scopeKind": ""}, {"name": "logging.Logger get_structured_logger(name: Optional[str] = None)", "description": "Returns a logger configured to include request context information in logs.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Logger] = None)", "scope": "RequestContextMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "dispatch(self, request: Request, call_next)", "scope": "RequestContextMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "bool filter(self, record: logging.LogRecord)", "scope": "_ContextFilter", "scopeKind": "class", "description": "unavailable"}], "calls": ["logging.getLogger", "logging.Logger.addFilter", "time.perf_counter", "uuid.uuid4", "dict.get"], "search-terms": ["RequestContextMiddleware", "metrics_tracking", "structured_logging", "context variables", "FastAPI middleware", "request tracing", "observability"], "state": 2, "file_id": 23, "knowledge_revision": 80, "git_revision": "", "ctags": [{"_type": "tag", "name": "RequestContextMiddleware", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^class RequestContextMiddleware(BaseHTTPMiddleware):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ContextFilter", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^class _ContextFilter(logging.Filter):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_METRICS", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^_METRICS: Dict[str, float] = {$/", "language": "Python", "typeref": "typename:Dict[str, float]", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    def __init__(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Lo/", "language": "Python", "kind": "member", "signature": "(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Logger] = None)", "scope": "RequestContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "dispatch", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    async def dispatch(self, request: Request, call_next):$/", "language": "Python", "kind": "member", "signature": "(self, request: Request, call_next)", "scope": "RequestContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "filter", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    def filter(self, record: logging.LogRecord) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, record: logging.LogRecord)", "scope": "_ContextFilter", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_request_id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_current_request_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_current_tenant_id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_current_tenant_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_structured_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_structured_logger(name: Optional[str] = None) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(name: Optional[str] = None)"}, {"_type": "tag", "name": "increment_metric", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def increment_metric(name: str, inc: float = 1.0) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(name: str, inc: float = 1.0)"}, {"_type": "tag", "name": "mask_secret_value", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def mask_secret_value(value: Optional[str], keep: int = 4) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(value: Optional[str], keep: int = 4)"}, {"_type": "tag", "name": "metrics_snapshot", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def metrics_snapshot() -> Dict[str, float]:$/", "language": "Python", "typeref": "typename:Dict[str,float]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "observe_latency", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def observe_latency(name: str, ms: float) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(name: str, ms: float)"}, {"_type": "tag", "name": "request_id_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^request_id_ctx: ContextVar[str] = ContextVar(\"request_id\", default=\"-\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}, {"_type": "tag", "name": "route_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^route_ctx: ContextVar[str] = ContextVar(\"route\", default=\"-\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}, {"_type": "tag", "name": "tenant_id_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^tenant_id_ctx: ContextVar[str] = ContextVar(\"tenant_id\", default=\"public\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}], "hash": "e3a831622b4aa723e4426296a2b0d63c", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/observability.py", "fields": [{"name": "Dict[str, float] _METRICS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] request_id_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] route_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] tenant_id_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"80": ""}]}