{"is_source_file": true, "format": "Python", "description": "This file implements observability and request context management middleware for a FastAPI application. It includes request ID, tenant ID, route tracking, metrics collection, and structured logging.", "external_files": ["fastapi", "starlette.middleware.base"], "external_methods": ["fastapi.Request", "fastapi.Response", "starlette.middleware.base.BaseHTTPMiddleware"], "published": ["metrics_snapshot", "increment_metric", "observe_latency", "get_current_request_id", "get_current_tenant_id", "mask_secret_value", "get_structured_logger"], "classes": [{"name": "RequestContextMiddleware", "description": "Middleware that manages request context data (request ID, tenant ID, route) and logs request-related information, including error handling and metrics."}, {"name": "_ContextFilter", "description": "Logging filter that injects request context information into log records for structured logging."}], "methods": [{"name": "Dict[str,float] metrics_snapshot()", "description": "Returns a copy of current in-memory metrics.", "scope": "", "scopeKind": ""}, {"name": "None increment_metric(name: str, inc: float = 1.0)", "description": "Increments a specified metric by a given amount.", "scope": "", "scopeKind": ""}, {"name": "None observe_latency(name: str, ms: float)", "description": "Adds latency measurement to a specified metric.", "scope": "", "scopeKind": ""}, {"name": "str get_current_request_id()", "description": "Retrieves the current request ID from context.", "scope": "", "scopeKind": ""}, {"name": "str get_current_tenant_id()", "description": "Retrieves the current tenant ID from context.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] mask_secret_value(value: Optional[str], keep: int = 4)", "description": "Masks secret values for logging by keeping the last few characters visible.", "scope": "", "scopeKind": ""}, {"name": "logging.Logger get_structured_logger(name: Optional[str] = None)", "description": "Provides a structured logger with context-aware filtering for request ID, tenant ID, and route.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Logger] = None)", "scope": "RequestContextMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "dispatch(self, request: Request, call_next)", "scope": "RequestContextMiddleware", "scopeKind": "class", "description": "unavailable"}, {"name": "bool filter(self, record: logging.LogRecord)", "scope": "_ContextFilter", "scopeKind": "class", "description": "unavailable"}], "calls": ["logging.getLogger", "logging.getLogger(__name__)", "logger.addFilter", "logger.filters", "self.logger.info", "self.logger.exception", "time.perf_counter", "uuid.uuid4", "request.headers.get", "request.scope.get", "response.status_code", "call_next(request)"], "search-terms": ["RequestContextMiddleware", "request ID contextvar", "tenant ID contextvar", "logging filter", "structured logging", "metrics counter", "middleware", "FastAPI observability", "request lifecycle tracking"], "state": 2, "file_id": 23, "knowledge_revision": 87, "git_revision": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37", "revision_history": [{"80": ""}, {"87": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37"}], "ctags": [{"_type": "tag", "name": "RequestContextMiddleware", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^class RequestContextMiddleware(BaseHTTPMiddleware):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ContextFilter", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^class _ContextFilter(logging.Filter):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_METRICS", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^_METRICS: Dict[str, float] = {$/", "language": "Python", "typeref": "typename:Dict[str, float]", "kind": "variable"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    def __init__(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Lo/", "language": "Python", "kind": "member", "signature": "(self, app, tenant_header_name: str = \"X-Tenant-ID\", logger: Optional[logging.Logger] = None)", "scope": "RequestContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "dispatch", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    async def dispatch(self, request: Request, call_next):$/", "language": "Python", "kind": "member", "signature": "(self, request: Request, call_next)", "scope": "RequestContextMiddleware", "scopeKind": "class"}, {"_type": "tag", "name": "filter", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^    def filter(self, record: logging.LogRecord) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, record: logging.LogRecord)", "scope": "_ContextFilter", "scopeKind": "class"}, {"_type": "tag", "name": "get_current_request_id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_current_request_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_current_tenant_id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_current_tenant_id() -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_structured_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def get_structured_logger(name: Optional[str] = None) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(name: Optional[str] = None)"}, {"_type": "tag", "name": "increment_metric", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def increment_metric(name: str, inc: float = 1.0) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(name: str, inc: float = 1.0)"}, {"_type": "tag", "name": "mask_secret_value", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def mask_secret_value(value: Optional[str], keep: int = 4) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(value: Optional[str], keep: int = 4)"}, {"_type": "tag", "name": "metrics_snapshot", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def metrics_snapshot() -> Dict[str, float]:$/", "language": "Python", "typeref": "typename:Dict[str,float]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "observe_latency", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^def observe_latency(name: str, ms: float) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(name: str, ms: float)"}, {"_type": "tag", "name": "request_id_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^request_id_ctx: ContextVar[str] = ContextVar(\"request_id\", default=\"-\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}, {"_type": "tag", "name": "route_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^route_ctx: ContextVar[str] = ContextVar(\"route\", default=\"-\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}, {"_type": "tag", "name": "tenant_id_ctx", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/observability.py", "pattern": "/^tenant_id_ctx: ContextVar[str] = ContextVar(\"tenant_id\", default=\"public\")$/", "language": "Python", "typeref": "typename:ContextVar[str]", "kind": "variable"}], "hash": "bb37dcc0d50dc4e792c22a68d941ba62", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/observability.py", "fields": [{"name": "Dict[str, float] _METRICS", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] request_id_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] route_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ContextVar[str] tenant_id_ctx", "scope": "", "scopeKind": "", "description": "unavailable"}]}