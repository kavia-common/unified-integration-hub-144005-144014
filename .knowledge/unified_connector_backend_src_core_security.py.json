{"is_source_file": true, "format": "Python", "description": "This Python source file provides security-related utility functions for encryption, token generation, validation, and cryptographic operations within a software project. It includes classes and functions for handling PKCE tokens, Fernet encryption, CSRF state management, timing, and expiration checks.", "external_files": ["src.core.settings", "src.core.logging"], "external_methods": ["get_settings", "get_logger"], "published": ["get_fernet", "encrypt_secret", "decrypt_secret", "generate_csrf_state", "verify_csrf_state", "generate_pkce", "compute_expiry", "is_expired"], "classes": [{"name": "PKCEBundle", "description": "A data class representing the PKCE (Proof Key for Code Exchange) bundle containing verifier, challenge, and method."}], "methods": [{"name": "Fernet get_fernet()", "description": "Returns a Fernet instance configured with the encryption key from settings.", "scope": "", "scopeKind": ""}, {"name": "str encrypt_secret(plaintext: str)", "description": "Encrypts a plaintext secret string into a Fernet token.", "scope": "", "scopeKind": ""}, {"name": "Optional[str] decrypt_secret(token: Optional[str])", "description": "Decrypts a Fernet token back into plaintext, returning None if decryption fails.", "scope": "", "scopeKind": ""}, {"name": "str generate_csrf_state(tenant_id: str, connector_id: str)", "description": "Generates a CSRF state token bound to tenant and connector identifiers, including an HMAC for integrity.", "scope": "", "scopeKind": ""}, {"name": "bool verify_csrf_state(state: Optional[str])", "description": "Validates the format and integrity of a CSRF state token.", "scope": "", "scopeKind": ""}, {"name": "PKCEBundle generate_pkce()", "description": "Generates a PKCE code verifier and challenge pair.", "scope": "", "scopeKind": ""}, {"name": "datetime _now_utc()", "description": "Returns the current UTC datetime.", "scope": "", "scopeKind": ""}, {"name": "datetime compute_expiry(expires_in_seconds: int, skew_seconds: int = 30)", "description": "Computes an absolute expiration time given a duration in seconds, with a safety skew.", "scope": "", "scopeKind": ""}, {"name": "bool is_expired(expires_at: Optional[datetime])", "description": "Checks whether a given expiration datetime has passed or is missing.", "scope": "", "scopeKind": ""}], "calls": ["get_settings", "get_logger", "hashlib.sha256", "base64.urlsafe_b64encode", "os.urandom", "hmac.new", "datetime.now", "timedelta"], "search-terms": ["security.py", "PKCEBundle", "Fernet encryption", "CSRF state", "PKCE", "encryption key", "HMAC", "token generation", "token validation"], "state": 2, "file_id": 20, "knowledge_revision": 50, "git_revision": "966bfcc341fc3ee3996957361265b65bdb2f1ce9", "revision_history": [{"45": ""}, {"50": "966bfcc341fc3ee3996957361265b65bdb2f1ce9"}], "ctags": [{"_type": "tag", "name": "PKCEBundle", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^class PKCEBundle:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_now_utc", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def _now_utc() -> datetime:$/", "language": "Python", "typeref": "typename:datetime", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "compute_expiry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def compute_expiry(expires_in_seconds: int, skew_seconds: int = 30) -> datetime:$/", "language": "Python", "typeref": "typename:datetime", "kind": "function", "signature": "(expires_in_seconds: int, skew_seconds: int = 30)"}, {"_type": "tag", "name": "decrypt_secret", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def decrypt_secret(token: Optional[str]) -> Optional[str]:$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "function", "signature": "(token: Optional[str])"}, {"_type": "tag", "name": "encrypt_secret", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def encrypt_secret(plaintext: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(plaintext: str)"}, {"_type": "tag", "name": "generate_csrf_state", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def generate_csrf_state(tenant_id: str, connector_id: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(tenant_id: str, connector_id: str)"}, {"_type": "tag", "name": "generate_pkce", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def generate_pkce() -> PKCEBundle:$/", "language": "Python", "typeref": "typename:PKCEBundle", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_fernet", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def get_fernet() -> Fernet:$/", "language": "Python", "typeref": "typename:Fernet", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "is_expired", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def is_expired(expires_at: Optional[datetime]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(expires_at: Optional[datetime])"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "method", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^    method: str = \"S256\"$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "PKCEBundle", "scopeKind": "class"}, {"_type": "tag", "name": "verify_csrf_state", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/security.py", "pattern": "/^def verify_csrf_state(state: Optional[str]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(state: Optional[str])"}], "hash": "41180541c4123d06aef3fcff865fe6c6", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/security.py", "fields": [{"name": "logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str method", "scope": "PKCEBundle", "scopeKind": "class", "description": "unavailable"}]}