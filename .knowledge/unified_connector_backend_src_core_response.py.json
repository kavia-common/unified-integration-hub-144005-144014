{"is_source_file": true, "format": "Python", "description": "This file defines standardized functions for producing API response payloads including success, error, and normalization of upstream errors. It provides a unified interface for responses such as success, validation errors, authentication failures, configuration issues, and upstream service errors.", "external_files": [], "external_methods": [], "published": ["ok", "error_payload", "normalize_upstream_error", "validation_error", "auth_required_error", "config_required_error"], "classes": [], "methods": [{"name": "Dict[str,Any] ok(data: Dict[str, Any] | List[Any] | Any, meta: Optional[Dict[str, Any]] = None)", "description": "Produce a standardized success payload with 'status': 'ok' and include data and optional metadata.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] error_payload( code: str, message: str, retry_after: Optional[Union[int, float]] = None, details: Optional[Dict[str, Any]] = None, http_status: Optional[int] = None, )", "description": "Create a standardized error payload with error code, message, optional retry delay, details, and HTTP status.", "scope": "", "scopeKind": ""}, {"name": "Tuple[bool,Optional[float]] _is_rate_limited(status_code: Optional[int], headers: Dict[str, Any] | None = None)", "description": "Determine if a response indicates rate limiting based on status code and headers, returning a tuple of (is_limited, retry_after).", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] normalize_upstream_error( upstream_status: Optional[int], upstream_text: Optional[str], headers: Optional[Dict[str, Any]] = None, default_message: str = \"Upstream service error\", )", "description": "Convert upstream HTTP error responses into standardized error payloads, handling authorization errors, rate limiting, and other upstream issues.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] validation_error(message: str, details: Optional[Dict[str, Any]] = None)", "description": "Return a standardized validation error payload.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] auth_required_error(message: str = \"Authentication required to perform this operation.\")", "description": "Return a standardized authentication required error payload.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] config_required_error(message: str = \"Connector is not fully configured for this tenant.\")", "description": "Return a standardized configuration required error payload.", "scope": "", "scopeKind": ""}], "calls": ["error_payload", "validation_error", "auth_required_error", "config_required_error"], "search-terms": ["response", "payload", "error", "standardized", "API", "upstream", "rate limit", "error handling", "success payload"], "state": 2, "file_id": 22, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "_is_rate_limited", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def _is_rate_limited(status_code: Optional[int], headers: Dict[str, Any] | None = None) -> Tuple/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[float]]", "kind": "function", "signature": "(status_code: Optional[int], headers: Dict[str, Any] | None = None)"}, {"_type": "tag", "name": "auth_required_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def auth_required_error(message: str = \"Authentication required to perform this operation.\") -> /", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(message: str = \"Authentication required to perform this operation.\")"}, {"_type": "tag", "name": "config_required_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def config_required_error(message: str = \"Connector is not fully configured for this tenant.\") -/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(message: str = \"Connector is not fully configured for this tenant.\")"}, {"_type": "tag", "name": "error_payload", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def error_payload($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( code: str, message: str, retry_after: Optional[Union[int, float]] = None, details: Optional[Dict[str, Any]] = None, http_status: Optional[int] = None, )"}, {"_type": "tag", "name": "normalize_upstream_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def normalize_upstream_error($/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( upstream_status: Optional[int], upstream_text: Optional[str], headers: Optional[Dict[str, Any]] = None, default_message: str = \"Upstream service error\", )"}, {"_type": "tag", "name": "ok", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def ok(data: Dict[str, Any] | List[Any] | Any, meta: Optional[Dict[str, Any]] = None) -> Dict[st/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(data: Dict[str, Any] | List[Any] | Any, meta: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "validation_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/response.py", "pattern": "/^def validation_error(message: str, details: Optional[Dict[str, Any]] = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(message: str, details: Optional[Dict[str, Any]] = None)"}], "hash": "96ccd647fa7b9d2ece15b21ad834d884", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/response.py", "revision_history": [{"61": ""}]}