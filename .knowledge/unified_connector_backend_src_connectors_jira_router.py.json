{"is_source_file": true, "format": "Python", "description": "This file defines a FastAPI router for interacting with Jira, including OAuth authentication, project listing, and issue creation. It also contains the JiraConnector class handling OAuth workflows, token management, and API calls to Jira.", "external_files": ["src.connectors.base", "src.core.db", "src.core.logging", "src.core.security", "src.core.settings", "src.core.token_store", "src.core.tenants", "src.core.response", ".client", ".mapping"], "external_methods": ["generate_pkce", "verify_csrf_state", "compute_expiry", "get_logger", "get_settings", "tenant_collection", "ok", "auth_required_error", "config_required_error", "normalize_upstream_error", "validation_error", "normalize_create_issue", "normalize_search_issues"], "published": ["get_router", "factory"], "classes": [{"name": "JiraConnector", "description": "Handles OAuth flow, token management, and Jira API interactions specific to a tenant."}], "methods": [{"name": "JiraConnector.__init__", "description": "Initializes a new JiraConnector with tenant-specific settings and collections."}, {"name": "JiraConnector.get_public_info", "description": "Returns basic info about the connector."}, {"name": "JiraConnector.oauth_login", "description": "Generates the Atlassian OAuth authorization URL with PKCE and CSRF protection."}, {"name": "JiraConnector.oauth_callback", "description": "Handles OAuth callback, exchanges authorization code for tokens, and stores tokens."}, {"name": "JiraConnector.search", "description": "Performs search queries on Jira issues based on provided parameters."}, {"name": "JiraConnector.connect", "description": "Checks if the OAuth token is valid, indicating connection status."}, {"name": "JiraConnector.disconnect", "description": "Deletes stored tokens and session data, disconnecting the account."}, {"name": "APIRouter get_router()", "description": "Returns a configured FastAPI APIRouter with endpoints for listing projects and creating issues.", "scope": "", "scopeKind": ""}, {"name": "JiraConnector factory(tenant_id: str)", "description": "Creates and returns a JiraConnector instance for a given tenant ID.", "scope": "", "scopeKind": ""}, {"name": "__init__(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "tuple[Optional[str],Optional[str]] _get_token_and_cloud_id(connector: \"JiraConnector\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "connect(self)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "create_issue(payload: JiraIssueCreate, tenant_id: str = Depends(get_tenant_id))", "scope": "get_router", "scopeKind": "function", "description": "unavailable"}, {"name": "disconnect(self)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] get_public_info(self)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "list_projects(tenant_id: str = Depends(get_tenant_id), page: int = Query(1, ge=1), per_page: int = Query(50, ge=1, le=100))", "scope": "get_router", "scopeKind": "function", "description": "unavailable"}, {"name": "oauth_callback(self, code: str, state: Optional[str])", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "OAuthLoginResponse oauth_login(self, redirect_to: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] search(self, params: SearchParams)", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}], "calls": ["generate_pkce", "verify_csrf_state", "compute_expiry", "get_logger", "get_settings", "tenant_collection", "ok", "auth_required_error", "config_required_error", "normalize_upstream_error", "validation_error", "JiraClient.search_issues", "JiraClient.list_projects", "JiraClient.create_issue"], "search-terms": ["Jira OAuth", "tenant-specific Jira connector", "Jira project listing", "Create Jira issue API", "OAuth callback handler", "Jira token management", "Jira cloud ID retrieval"], "state": 2, "file_id": 15, "knowledge_revision": 77, "git_revision": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf", "revision_history": [{"31": ""}, {"48": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"53": "966bfcc341fc3ee3996957361265b65bdb2f1ce9"}, {"54": "966bfcc341fc3ee3996957361265b65bdb2f1ce9"}, {"66": "379774def9059dafe18d2301fc45048fa432be1e"}, {"70": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf"}, {"77": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf"}], "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "JiraIssueCreate", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^class JiraIssueCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    def __init__(self, tenant_id: str):$/", "language": "Python", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "_get_token_and_cloud_id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^def _get_token_and_cloud_id(connector: \"JiraConnector\") -> tuple[Optional[str], Optional[str]]:$/", "language": "Python", "typeref": "typename:tuple[Optional[str],Optional[str]]", "kind": "function", "signature": "(connector: \"JiraConnector\")"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def connect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "create_issue", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def create_issue(payload: JiraIssueCreate, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(payload: JiraIssueCreate, tenant_id: str = Depends(get_tenant_id))", "scope": "get_router", "scopeKind": "function"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    description: Optional[str] = Field(default=None, description=\"Optional issue description\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "JiraIssueCreate", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def disconnect(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "factory", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^def factory(tenant_id: str) -> JiraConnector:$/", "language": "Python", "typeref": "typename:JiraConnector", "kind": "function", "signature": "(tenant_id: str)"}, {"_type": "tag", "name": "get_public_info", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    def get_public_info(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_router", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^def get_router() -> APIRouter:$/", "language": "Python", "typeref": "typename:APIRouter", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    id = \"jira\"$/", "language": "Python", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "issuetype", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    issuetype: str = Field(default=\"Task\", description=\"Issue type name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraIssueCreate", "scopeKind": "class"}, {"_type": "tag", "name": "list_projects", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def list_projects(tenant_id: str = Depends(get_tenant_id), page: int = Query(1, ge=1),/", "file": true, "language": "Python", "kind": "function", "signature": "(tenant_id: str = Depends(get_tenant_id), page: int = Query(1, ge=1), per_page: int = Query(50, ge=1, le=100))", "scope": "get_router", "scopeKind": "function"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^logger = get_logger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    name = \"Jira\"$/", "language": "Python", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def oauth_callback(self, code: str, state: Optional[str]):$/", "language": "Python", "kind": "member", "signature": "(self, code: str, state: Optional[str])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def oauth_login(self, redirect_to: Optional[str] = None) -> OAuthLoginResponse:$/", "language": "Python", "typeref": "typename:OAuthLoginResponse", "kind": "member", "signature": "(self, redirect_to: Optional[str] = None)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "project_key", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    project_key: str = Field(..., description=\"Project key (e.g., ABC)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraIssueCreate", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    async def search(self, params: SearchParams) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, params: SearchParams)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "summary", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/jira/router.py", "pattern": "/^    summary: str = Field(..., description=\"Issue summary\\/title\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "JiraIssueCreate", "scopeKind": "class"}], "hash": "139a5f05ef0ef8e5fc5824d9475a86ec", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/jira/router.py", "fields": [{"name": "Optional[str] description", "scope": "JiraIssueCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "id = \"jira\"", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "str issuetype", "scope": "JiraIssueCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "logger = get_logger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "name = \"Jira\"", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "str project_key", "scope": "JiraIssueCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str summary", "scope": "JiraIssueCreate", "scopeKind": "class", "description": "unavailable"}]}