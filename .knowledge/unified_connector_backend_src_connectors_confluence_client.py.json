{"is_source_file": true, "format": "Python", "description": "This file contains a Python class 'ConfluenceClient' that serves as a client for interacting with the Confluence Cloud REST API. It provides methods for searching pages, listing spaces, and creating pages within Confluence, utilizing async HTTP requests with the httpx library. The class manages authorization headers and constructs API URLs, handling responses and errors accordingly.", "external_files": ["src.core.response"], "external_methods": ["normalize_upstream_error"], "published": ["ConfluenceClient"], "classes": [{"name": "ConfluenceClient", "description": "A client class for Confluence Cloud's REST API, manages authentication, request construction, and response processing for operations like search, list spaces, and create pages."}], "methods": [{"name": "__init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "description": "Initializes the client with access token, cloud ID, optional base URL, and timeout.", "scope": "ConfluenceClient", "scopeKind": "class"}, {"name": "Dict[str,str] _headers(self)", "description": "Constructs headers for authentication and content type.", "scope": "ConfluenceClient", "scopeKind": "class"}, {"name": "str _url(self, path: str)", "description": "Builds the full API URL for a given API path.", "scope": "ConfluenceClient", "scopeKind": "class"}, {"name": "Dict[str,Any] search_pages(self, query: str, limit: int = 25, cursor: str | None = None)", "description": "Asynchronously searches for pages based on a query, with pagination support.", "scope": "ConfluenceClient", "scopeKind": "class"}, {"name": "Dict[str,Any] list_spaces(self, limit: int = 25, cursor: str | None = None)", "description": "Asynchronously retrieves a list of spaces, with pagination support.", "scope": "ConfluenceClient", "scopeKind": "class"}, {"name": "Dict[str,Any] create_page(self, space_key: str, title: str, body: str)", "description": "Asynchronously creates a new page in a specified Confluence space.", "scope": "ConfluenceClient", "scopeKind": "class"}], "calls": ["httpx.AsyncClient", "resp.get", "resp.json", "normalize_upstream_error"], "search-terms": ["ConfluenceClient", "REST API client", "async HTTP methods", "create_page", "search_pages", "list_spaces", "Confluence"], "state": 2, "file_id": 16, "knowledge_revision": 74, "git_revision": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf", "revision_history": [{"32": ""}, {"43": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"55": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"59": "379774def9059dafe18d2301fc45048fa432be1e"}, {"65": "379774def9059dafe18d2301fc45048fa432be1e"}, {"74": "35f8cee06127abfa45ba15d76ea15219c4e0d3bf"}], "ctags": [{"_type": "tag", "name": "ConfluenceClient", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^class ConfluenceClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    def __init__(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: f/", "language": "Python", "kind": "member", "signature": "(self, access_token: str, cloud_id: str, base_url: str | None = None, timeout: float = 20.0)", "scope": "ConfluenceClient", "scopeKind": "class"}, {"_type": "tag", "name": "_headers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    def _headers(self) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self)", "scope": "ConfluenceClient", "scopeKind": "class"}, {"_type": "tag", "name": "_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    def _url(self, path: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, path: str)", "scope": "ConfluenceClient", "scopeKind": "class"}, {"_type": "tag", "name": "create_page", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    async def create_page(self, space_key: str, title: str, body: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, space_key: str, title: str, body: str)", "scope": "ConfluenceClient", "scopeKind": "class"}, {"_type": "tag", "name": "list_spaces", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    async def list_spaces(self, limit: int = 25, cursor: str | None = None) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, limit: int = 25, cursor: str | None = None)", "scope": "ConfluenceClient", "scopeKind": "class"}, {"_type": "tag", "name": "search_pages", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/confluence/client.py", "pattern": "/^    async def search_pages(self, query: str, limit: int = 25, cursor: str | None = None) -> Dict/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, query: str, limit: int = 25, cursor: str | None = None)", "scope": "ConfluenceClient", "scopeKind": "class"}], "hash": "8e64074255e2e7787407b2c243bd1a54", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/confluence/client.py"}