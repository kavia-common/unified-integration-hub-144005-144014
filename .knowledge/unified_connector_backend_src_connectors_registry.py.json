{"is_source_file": true, "format": "Python", "description": "This Python source file implements a registry and API integration for managing connectors within a FastAPI application. It includes classes to represent connector metadata and status, functions to derive status from stored documents, and a class 'ConnectorRegistry' that handles registration, listing, and mounting of connector endpoints, including OAuth flows, search, and connect/disconnect functionalities.", "external_files": ["src.core.tenants", "src.connectors.base", "src.core.response", "src.core.db", "src.core.observability", "src.core.api_models"], "external_methods": ["get_tenant_id", "BaseConnector.oauth_login", "BaseConnector.oauth_callback", "ok", "validation_error", "tenant_collection", "increment_metric", "observe_latency"], "published": ["ConnectorInfo", "ConnectorStatus", "ConnectorListItem", "ConnectorFactory", "_derive_status_from_doc", "ConnectorRegistry"], "classes": [{"name": "ConnectorInfo", "description": "Represents basic information about a connector with id, name, and tags."}, {"name": "ConnectorStatus", "description": "Represents the connection status of a connector for a tenant, including connection state, timestamps, errors, scopes, and metadata."}, {"name": "ConnectorListItem", "description": "Encapsulates a connector's basic info along with its per-tenant status."}, {"name": "ConnectorRegistry", "description": "Manages registration and API mounting for connectors, including lifecycle operations, status management, and route setup."}], "methods": [{"name": "ConnectorStatus _derive_status_from_doc(doc: Dict[str, Any] | None)", "description": "Creates a ConnectorStatus object from a stored document, inferring connection status, timestamps, and other info.", "scope": "", "scopeKind": ""}, {"name": "__init__(self)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "List[ConnectorListItem] _list_with_status(self, tenant_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "connect(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "disconnect(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "ConnectorFactory get_factory(self, connector_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "list_connectors(tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "List[ConnectorInfo] list_public(self)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "mount_all(self, app: FastAPI, prefix: str = \"/connectors\")", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth_callback(connector_id: str, code: str, state: Optional[str] = None, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "oauth_login(connector_id: str, tenant_id: str = Depends(get_tenant_id), redirect_to: Optional[str] = None)", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "register(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional[APIRouter] = None, tags: Optional[List[str]] = None)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "search( connector_id: str, q: str = Query(..., description=\"Search query\"), tenant_id: str = Depends(get_tenant_id), resource_type: Optional[str] = Query(default=None, description=\"Filter by resource type (e.g., issues, pages)\"), page: int = Query(1, ge=1, description=\"Page number (1-based)\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), filters: Optional[str] = Query(default=None, description=\"JSON object string of additional filters\"), )", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}], "calls": ["tenant_collection", "ok", "validation_error", "get_tenant_id", "BaseConnector.oauth_login", "BaseConnector.oauth_callback", "connector.search", "connect", "disconnect", "increment_metric", "observe_latency", "app.include_router"], "search-terms": ["ConnectorRegistry", "register", "list_public", "mount_all", "OAuth", "connectors", "search", "OAuthLogin", "API routes", "FastAPI"], "state": 2, "file_id": 12, "knowledge_revision": 99, "git_revision": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37", "revision_history": [{"29": ""}, {"41": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"68": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"72": "8748dbe25d60adb17214b8fa261ebc44b6c3324b"}, {"78": "ea3bdc0fda379c4dbdfc49343a5a785c136c2316"}, {"85": "ea3bdc0fda379c4dbdfc49343a5a785c136c2316"}, {"91": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37"}, {"92": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37"}, {"99": "1d6e0c42860b2d81e6b9af590de87d9eeefd1d37"}], "ctags": [{"_type": "tag", "name": "ConnectorFactory", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^ConnectorFactory = Callable[[str], BaseConnector]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ConnectorInfo", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorInfo(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorListItem", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorListItem(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorRegistry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorRegistry:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorStatus", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorStatus(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "_derive_status_from_doc", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^def _derive_status_from_doc(doc: Dict[str, Any] | None) -> ConnectorStatus:$/", "language": "Python", "typeref": "typename:ConnectorStatus", "kind": "function", "signature": "(doc: Dict[str, Any] | None)"}, {"_type": "tag", "name": "_list_with_status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def _list_with_status(self, tenant_id: str) -> List[ConnectorListItem]:$/", "language": "Python", "typeref": "typename:List[ConnectorListItem]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def connect(connector_id: str, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "connected", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    connected: bool = Field(..., description=\"True if connector is linked\\/configured for this t/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def disconnect(connector_id: str, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "get_factory", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def get_factory(self, connector_id: str) -> ConnectorFactory:$/", "language": "Python", "typeref": "typename:ConnectorFactory", "kind": "member", "signature": "(self, connector_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    id: str = Field(..., description=\"Connector id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    id: str = Field(..., description=\"Connector id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "last_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    last_error: Optional[str] = Field(default=None, description=\"Last error message observed for/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "last_refreshed", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    last_refreshed: Optional[str] = Field(default=None, description=\"ISO timestamp when tokens\\//", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "list_connectors", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        def list_connectors(tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "list_public", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def list_public(self) -> List[ConnectorInfo]:$/", "language": "Python", "typeref": "typename:List[ConnectorInfo]", "kind": "member", "signature": "(self)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    metadata: Dict[str, Any] = Field(default_factory=dict, description=\"Additional connector met/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "mount_all", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def mount_all(self, app: FastAPI, prefix: str = \"\\/connectors\"):$/", "language": "Python", "kind": "member", "signature": "(self, app: FastAPI, prefix: str = \"/connectors\")", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    name: str = Field(..., description=\"Connector name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    name: str = Field(..., description=\"Connector name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def oauth_callback(connector_id: str, code: str, state: Optional[str] = None, tena/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, code: str, state: Optional[str] = None, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def oauth_login(connector_id: str, tenant_id: str = Depends(get_tenant_id), redire/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id), redirect_to: Optional[str] = None)", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def register(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional/", "language": "Python", "kind": "member", "signature": "(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional[APIRouter] = None, tags: Optional[List[str]] = None)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "scopes", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    scopes: List[str] = Field(default_factory=list, description=\"Active scopes\\/permissions gran/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def search($/", "file": true, "language": "Python", "kind": "function", "signature": "( connector_id: str, q: str = Query(..., description=\"Search query\"), tenant_id: str = Depends(get_tenant_id), resource_type: Optional[str] = Query(default=None, description=\"Filter by resource type (e.g., issues, pages)\"), page: int = Query(1, ge=1, description=\"Page number (1-based)\"), per_page: int = Query(10, ge=1, le=100, description=\"Items per page\"), filters: Optional[str] = Query(default=None, description=\"JSON object string of additional filters\"), )", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    status: ConnectorStatus = Field(..., description=\"Per-tenant connection status\")$/", "language": "Python", "typeref": "typename:ConnectorStatus", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    tags: List[str] = Field(default_factory=list, description=\"Tags\\/categories\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    tags: List[str] = Field(default_factory=list, description=\"Tags\\/categories\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}], "hash": "431050483c23311ac0b400eeeaf35deb", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/registry.py", "fields": [{"name": "ConnectorFactory = Callable[[str], BaseConnector]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool connected", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] last_error", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] last_refreshed", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] metadata", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] scopes", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "ConnectorStatus status", "scope": "ConnectorListItem", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] tags", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}]}