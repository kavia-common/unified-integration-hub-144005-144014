{"is_source_file": true, "format": "Python", "description": "This file implements a registry for managing connector objects in a web application, with functionalities for registering connectors, retrieving their factories, listing them with status information, and mounting related API endpoints onto a FastAPI application. It defines data models for connector info and status, and provides methods for OAuth flows, search, and connection management.", "external_files": ["src.core.tenants", "src.connectors.base", "src.core.response", "src.core.db"], "external_methods": ["get_tenant_id", "BaseConnector.oauth_login", "BaseConnector.oauth_callback", "BaseConnector.search", "BaseConnector.connect", "BaseConnector.disconnect", "ok", "validation_error"], "published": ["ConnectorInfo", "ConnectorStatus", "ConnectorListItem", "ConnectorFactory", "_derive_status_from_doc", "ConnectorRegistry"], "classes": [{"name": "ConnectorRegistry", "description": "A class that maintains an in-memory registry of connector configurations, provides registration, lookup, listing with status, and integration with FastAPI application via route mounting."}], "methods": [{"name": "ConnectorStatus _derive_status_from_doc(doc: Dict[str, Any] | None)", "description": "Maps a stored connector document to a ConnectorStatus object by extracting status, timestamps, scopes, and metadata.", "scope": "", "scopeKind": ""}, {"name": "register(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional[APIRouter] = None, tags: Optional[List[str]] = None)", "description": "Registers a connector with a specified ID, name, factory function, optional router, and tags.", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"name": "ConnectorFactory get_factory(self, connector_id: str)", "description": "Retrieves the factory function associated with a given connector ID, raising KeyError if not registered.", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"name": "List[ConnectorInfo] list_public(self)", "description": "Returns a list of ConnectorInfo objects representing all registered connectors.", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"name": "List[ConnectorListItem] _list_with_status(self, tenant_id: str)", "description": "Retrieves the list of connectors enriched with per-tenant connection status by querying the database.", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"name": "mount_all(self, app: FastAPI, prefix: str = \"/connectors\")", "description": "Mounts all connector routes and sub-routers onto a FastAPI application under a specified prefix, setting up endpoints for listing, OAuth flows, search, connect, and disconnect.", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "ConnectorRegistry", "scopeKind": "class", "description": "unavailable"}, {"name": "connect(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "disconnect(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "list_connectors(tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "oauth_callback(connector_id: str, code: str, state: Optional[str] = None, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "oauth_login(connector_id: str, tenant_id: str = Depends(get_tenant_id), redirect_to: Optional[str] = None)", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}, {"name": "search(connector_id: str, q: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member", "description": "unavailable"}], "calls": ["get_tenant_id", "tenant_collection", "ok", "validation_error", "self.get_factory", "factory(tenant_id)", "connector.oauth_login", "connector.oauth_callback", "connector.search", "connector.connect", "connector.disconnect"], "search-terms": ["ConnectorRegistry", "register", "list_public", "mount_all", "oauth", "connectors", "status", "per-tenant", "API router"], "state": 2, "file_id": 12, "knowledge_revision": 72, "git_revision": "8748dbe25d60adb17214b8fa261ebc44b6c3324b", "revision_history": [{"29": ""}, {"41": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"68": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}, {"72": "8748dbe25d60adb17214b8fa261ebc44b6c3324b"}], "ctags": [{"_type": "tag", "name": "ConnectorFactory", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^ConnectorFactory = Callable[[str], BaseConnector]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ConnectorInfo", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorInfo(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorListItem", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorListItem(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorRegistry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorRegistry:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ConnectorStatus", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^class ConnectorStatus(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "_derive_status_from_doc", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^def _derive_status_from_doc(doc: Dict[str, Any] | None) -> ConnectorStatus:$/", "language": "Python", "typeref": "typename:ConnectorStatus", "kind": "function", "signature": "(doc: Dict[str, Any] | None)"}, {"_type": "tag", "name": "_list_with_status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def _list_with_status(self, tenant_id: str) -> List[ConnectorListItem]:$/", "language": "Python", "typeref": "typename:List[ConnectorListItem]", "kind": "member", "signature": "(self, tenant_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "connect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def connect(connector_id: str, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "connected", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    connected: bool = Field(..., description=\"True if connector is linked\\/configured for this t/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "disconnect", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def disconnect(connector_id: str, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "get_factory", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def get_factory(self, connector_id: str) -> ConnectorFactory:$/", "language": "Python", "typeref": "typename:ConnectorFactory", "kind": "member", "signature": "(self, connector_id: str)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    id: str = Field(..., description=\"Connector id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    id: str = Field(..., description=\"Connector id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "last_error", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    last_error: Optional[str] = Field(default=None, description=\"Last error message observed for/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "last_refreshed", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    last_refreshed: Optional[str] = Field(default=None, description=\"ISO timestamp when tokens\\//", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "list_connectors", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        def list_connectors(tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "list_public", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def list_public(self) -> List[ConnectorInfo]:$/", "language": "Python", "typeref": "typename:List[ConnectorInfo]", "kind": "member", "signature": "(self)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    metadata: Dict[str, Any] = Field(default_factory=dict, description=\"Additional connector met/", "language": "Python", "typeref": "typename:Dict[str, Any]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "mount_all", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def mount_all(self, app: FastAPI, prefix: str = \"\\/connectors\"):$/", "language": "Python", "kind": "member", "signature": "(self, app: FastAPI, prefix: str = \"/connectors\")", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    name: str = Field(..., description=\"Connector name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    name: str = Field(..., description=\"Connector name\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "oauth_callback", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def oauth_callback(connector_id: str, code: str, state: Optional[str] = None, tena/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, code: str, state: Optional[str] = None, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "oauth_login", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def oauth_login(connector_id: str, tenant_id: str = Depends(get_tenant_id), redire/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, tenant_id: str = Depends(get_tenant_id), redirect_to: Optional[str] = None)", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    def register(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional/", "language": "Python", "kind": "member", "signature": "(self, connector_id: str, name: str, factory: ConnectorFactory, router: Optional[APIRouter] = None, tags: Optional[List[str]] = None)", "scope": "ConnectorRegistry", "scopeKind": "class"}, {"_type": "tag", "name": "scopes", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    scopes: List[str] = Field(default_factory=list, description=\"Active scopes\\/permissions gran/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorStatus", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^        async def search(connector_id: str, q: str, tenant_id: str = Depends(get_tenant_id)):$/", "file": true, "language": "Python", "kind": "function", "signature": "(connector_id: str, q: str, tenant_id: str = Depends(get_tenant_id))", "scope": "ConnectorRegistry.mount_all", "scopeKind": "member"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    status: ConnectorStatus = Field(..., description=\"Per-tenant connection status\")$/", "language": "Python", "typeref": "typename:ConnectorStatus", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    tags: List[str] = Field(default_factory=list, description=\"Tags\\/categories\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorInfo", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/connectors/registry.py", "pattern": "/^    tags: List[str] = Field(default_factory=list, description=\"Tags\\/categories\")$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "ConnectorListItem", "scopeKind": "class"}], "hash": "f4725c7e4a305b94c66f78f1ff50b599", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/connectors/registry.py", "fields": [{"name": "ConnectorFactory = Callable[[str], BaseConnector]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool connected", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] last_error", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] last_refreshed", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str, Any] metadata", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "str name", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] scopes", "scope": "ConnectorStatus", "scopeKind": "class", "description": "unavailable"}, {"name": "ConnectorStatus status", "scope": "ConnectorListItem", "scopeKind": "class", "description": "unavailable"}, {"name": "List[str] tags", "scope": "ConnectorInfo", "scopeKind": "class", "description": "unavailable"}]}