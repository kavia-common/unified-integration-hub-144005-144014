{"is_source_file": true, "format": "Python", "description": "This is a Python source file implementing a Jira connector class that inherits from BaseConnector. It provides methods for OAuth authorization, token exchange, PAT validation, search, item creation, and listing collections with mock implementations for demonstration purposes.", "external_files": ["../core/token_store.py", "./base.py"], "external_methods": ["token_store().set"], "published": ["jira_connector"], "classes": [{"name": "JiraConnector", "description": "A connector class for Jira, implementing methods for OAuth flow, token management, search, and item creation using mocked implementations for demonstration."}], "methods": [{"name": "Dict[str,str] get_oauth_authorize_url(self, tenant_id: str, state: str)", "description": "Generates a mocked OAuth authorization URL for Jira with provided tenant ID and state.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] exchange_code_for_tokens(self, tenant_id: str, code: str, state: str)", "description": "Mocks exchanging an authorization code for tokens and stores them in token storage.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "bool validate_pat(self, tenant_id: str, credentials: Dict[str, Any])", "description": "Validates a personal access token by checking the presence of api_token and email, then stores credentials.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] search(self, tenant_id: str, query: str, resource: str, page: int = 1, per_page: int = 20)", "description": "Returns mocked search results for issues related to the query.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "CreateResult create(self, tenant_id: str, resource: str, payload: Dict[str, Any])", "description": "Creates a mock Jira issue based on the provided payload.", "scope": "JiraConnector", "scopeKind": "class"}, {"name": "Dict[str,Any] list_collections(self, tenant_id: str, resource: str)", "description": "Returns a list of mock projects/collections.", "scope": "JiraConnector", "scopeKind": "class"}], "calls": ["token_store().set"], "search-terms": ["JiraConnector", "OAuth", "token_store", "search", "create", "list_collections", "Demo Project"], "state": 2, "file_id": 18, "knowledge_revision": 46, "git_revision": "", "ctags": [{"_type": "tag", "name": "JiraConnector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^class JiraConnector(BaseConnector):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def create(self, tenant_id: str, resource: str, payload: Dict[str, Any]) -> CreateResult:$/", "language": "Python", "typeref": "typename:CreateResult", "kind": "member", "signature": "(self, tenant_id: str, resource: str, payload: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "display_name", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    display_name = \"Jira\"$/", "language": "Python", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "exchange_code_for_tokens", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def exchange_code_for_tokens(self, tenant_id: str, code: str, state: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str, code: str, state: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "get_oauth_authorize_url", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def get_oauth_authorize_url(self, tenant_id: str, state: str) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self, tenant_id: str, state: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    id = \"jira\"$/", "language": "Python", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "jira_connector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^jira_connector = JiraConnector()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "list_collections", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def list_collections(self, tenant_id: str, resource: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str, resource: str)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "required_scopes", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    required_scopes: List[str] = [\"read:jira-work\", \"write:jira-work\"]$/", "language": "Python", "typeref": "typename:List[str]", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def search(self, tenant_id: str, query: str, resource: str, page: int = 1, per_page: int = 2/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, tenant_id: str, query: str, resource: str, page: int = 1, per_page: int = 20)", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "supports_oauth", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    supports_oauth = True$/", "language": "Python", "kind": "variable", "scope": "JiraConnector", "scopeKind": "class"}, {"_type": "tag", "name": "validate_pat", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/jira.py", "pattern": "/^    def validate_pat(self, tenant_id: str, credentials: Dict[str, Any]) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, tenant_id: str, credentials: Dict[str, Any])", "scope": "JiraConnector", "scopeKind": "class"}], "hash": "63fc010fe4b56ede2434b4ef993f81a5", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/connectors/jira.py", "fields": [{"name": "display_name = \"Jira\"", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "id = \"jira\"", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "jira_connector = JiraConnector()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "List[str] required_scopes", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}, {"name": "supports_oauth = True", "scope": "JiraConnector", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"46": ""}]}