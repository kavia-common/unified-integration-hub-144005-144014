{"is_source_file": true, "format": "Python", "description": "This file defines custom logging configurations, including a JSON formatter class for structured logging, functions to set up the root logger based on environment variables, and a public function to obtain loggers with structured context. It references other local modules such as 'observability'.", "external_files": ["./observability"], "external_methods": ["get_structured_logger"], "published": ["get_logger"], "classes": [{"name": "JsonFormatter", "description": "Custom JSON formatter for log records, emitting logs as single-line JSON with additional context fields."}], "methods": [{"name": "logging.Logger _configure_root_logger(level: str)", "description": "Configures and returns the root logger with specified level and format (JSON or plain text).", "scope": "", "scopeKind": ""}, {"name": "logging.Logger get_logger(name: Optional[str] = None)", "description": "Returns a structured logger instance for a given module or name.", "scope": "", "scopeKind": ""}, {"name": "str format(self, record: logging.LogRecord)", "scope": "JsonFormatter", "scopeKind": "class", "description": "unavailable"}], "calls": ["logging.getLogger", "logging.StreamHandler", "logger.setFormatter", "logger.addHandler", "logger.setLevel", "get_structured_logger"], "search-terms": ["logging configuration", "JsonFormatter", "structured logging", "root logger setup", "LOG_LEVEL environment variable", "LOG_FORMAT environment variable", "get_structured_logger"], "state": 2, "file_id": 6, "knowledge_revision": 81, "git_revision": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2", "revision_history": [{"14": ""}, {"81": "d003e778e8476d42a3bfd185a6f01fbb63bf40e2"}], "ctags": [{"_type": "tag", "name": "JsonFormatter", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^class JsonFormatter(logging.Formatter):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_LOG_FORMAT", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^_LOG_FORMAT = os.getenv(\"LOG_FORMAT\", \"json\").lower()  # 'json' or 'plain'$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_LOG_LEVEL", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^_LOG_LEVEL = os.getenv(\"LOG_LEVEL\", \"INFO\").upper()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_configure_root_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^def _configure_root_logger(level: str) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(level: str)"}, {"_type": "tag", "name": "format", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^    def format(self, record: logging.LogRecord) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, record: logging.LogRecord)", "scope": "JsonFormatter", "scopeKind": "class"}, {"_type": "tag", "name": "get_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^def get_logger(name: Optional[str] = None) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(name: Optional[str] = None)"}, {"_type": "tag", "name": "root_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^root_logger = _configure_root_logger(_LOG_LEVEL)$/", "language": "Python", "kind": "variable"}], "hash": "b6563d1eee1212ca1da23d1e23bcf7c7", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/logging.py", "fields": [{"name": "_LOG_FORMAT = os.getenv(\"LOG_FORMAT\", \"json\").lower()  # 'json' or 'plain'", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "_LOG_LEVEL = os.getenv(\"LOG_LEVEL\", \"INFO\").upper()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "root_logger = _configure_root_logger(_LOG_LEVEL)", "scope": "", "scopeKind": "", "description": "unavailable"}]}