{"is_source_file": true, "format": "Python", "description": "This file configures logging settings for a Python application. It sets up a root logger with a specific format and log level, and provides a public function to retrieve module loggers consistent with the global configuration.", "external_files": ["logging", "os", "typing"], "external_methods": ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "os.getenv"], "published": ["get_logger"], "classes": [], "methods": [{"name": "logging.Logger _configure_root_logger(level: str)", "description": "Configures and returns the root logger with a stream handler and a specific message format.", "scope": "", "scopeKind": ""}, {"name": "logging.Logger get_logger(name: Optional[str] = None)", "description": "Returns a logger instance, either with a specified name or the module's name, using the global logging configuration.", "scope": "", "scopeKind": ""}], "calls": ["logging.getLogger", "logging.StreamHandler", "logging.Formatter", "logger.setLevel", "logger.addHandler"], "search-terms": ["logging setup", "logger configuration", "log level", "root logger", "Python logging configuration"], "state": 2, "file_id": 6, "knowledge_revision": 14, "git_revision": "", "ctags": [{"_type": "tag", "name": "_LOG_LEVEL", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^_LOG_LEVEL = os.getenv(\"LOG_LEVEL\", \"INFO\").upper()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "_configure_root_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^def _configure_root_logger(level: str) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(level: str)"}, {"_type": "tag", "name": "get_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^def get_logger(name: Optional[str] = None) -> logging.Logger:$/", "language": "Python", "typeref": "typename:logging.Logger", "kind": "function", "signature": "(name: Optional[str] = None)"}, {"_type": "tag", "name": "root_logger", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/src/core/logging.py", "pattern": "/^root_logger = _configure_root_logger(_LOG_LEVEL)$/", "language": "Python", "kind": "variable"}], "hash": "91f9a27c42a44715b24ffc1eb1813d1e", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/src/core/logging.py", "fields": [{"name": "_LOG_LEVEL = os.getenv(\"LOG_LEVEL\", \"INFO\").upper()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "root_logger = _configure_root_logger(_LOG_LEVEL)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14": ""}]}