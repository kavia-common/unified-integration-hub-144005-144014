{"is_source_file": true, "format": "Python", "description": "This source file defines a registry for connectors within a FastAPI web application. It maintains dictionaries to register and retrieve connector instances and their associated routers, provides functions to list all registered connectors, get a specific connector by id, and to mount all registered connector routers onto a FastAPI app.", "external_files": ["./base.py"], "external_methods": ["fastapi.FastAPI.include_router"], "published": ["list_connectors", "get_connector", "register", "mount_all_connectors"], "classes": [{"name": "BaseConnector", "description": "A base class for connectors, imported from .base module, representing the core interface for connector instances."}], "methods": [{"name": "register(connector: BaseConnector, router)", "description": "Registers a connector instance with its corresponding router into the registry.", "scope": "", "scopeKind": ""}, {"name": "List[dict] list_connectors()", "description": "Returns a list of all registered connectors with their metadata.", "scope": "", "scopeKind": ""}, {"name": "BaseConnector|None get_connector(connector_id: str)", "description": "Retrieves a connector instance by its unique identifier.", "scope": "", "scopeKind": ""}, {"name": "mount_all_connectors(app: FastAPI)", "description": "Mounts all registered connector routers onto a given FastAPI application.", "scope": "", "scopeKind": ""}], "calls": ["app.include_router"], "search-terms": ["registry", "connectors registry", "FastAPI include_router", "BaseConnector", "connector registration", "connector list"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "_registry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^_registry: Dict[str, BaseConnector] = {}$/", "language": "Python", "typeref": "typename:Dict[str, BaseConnector]", "kind": "variable"}, {"_type": "tag", "name": "_routers", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^_routers: Dict[str, any] = {}$/", "language": "Python", "typeref": "typename:Dict[str, any]", "kind": "variable"}, {"_type": "tag", "name": "get_connector", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^def get_connector(connector_id: str) -> BaseConnector | None:$/", "language": "Python", "typeref": "typename:BaseConnector|None", "kind": "function", "signature": "(connector_id: str)"}, {"_type": "tag", "name": "list_connectors", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^def list_connectors() -> List[dict]:$/", "language": "Python", "typeref": "typename:List[dict]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "mount_all_connectors", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^def mount_all_connectors(app: FastAPI):$/", "language": "Python", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^def register(connector: BaseConnector, router):$/", "language": "Python", "kind": "function", "signature": "(connector: BaseConnector, router)"}], "hash": "a6d368b7da6f8330a7f1e961b31468e5", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/connectors/registry.py", "fields": [{"name": "Dict[str, BaseConnector] _registry", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Dict[str, any] _routers", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21": ""}]}