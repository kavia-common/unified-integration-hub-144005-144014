{"is_source_file": true, "format": "Python", "description": "Defines a connector registry class `_Registry` for registering, retrieving, and listing connector objects, along with a singleton instance `_registry` and a function `connectors_registry` to access it.", "external_files": ["base.py"], "external_methods": ["BaseConnector.id", "BaseConnector.display_name", "BaseConnector.supports_oauth", "BaseConnector.required_scopes"], "published": ["connectors_registry"], "classes": [{"name": "_Registry", "description": "Encapsulates registry management for connector instances, including registration, lookup, and listing."}], "methods": [{"name": "None register(self, connector: BaseConnector)", "description": "Registers a new connector in the registry, raising an error if the connector ID is already registered.", "scope": "_Registry", "scopeKind": "class"}, {"name": "Optional[BaseConnector] get(self, connector_id: str)", "description": "Retrieves a connector by its ID, returning None if not found.", "scope": "_Registry", "scopeKind": "class"}, {"name": "List[dict] list(self)", "description": "Returns a list of dictionaries representing all registered connectors with key attributes.", "scope": "_Registry", "scopeKind": "class"}, {"name": "None __init__(self)", "scope": "_Registry", "scopeKind": "class", "description": "unavailable"}, {"name": "_Registry connectors_registry()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["connectors_registry()"], "search-terms": ["Connector registry", "BaseConnector", "_Registry", "register connector", "get connector by ID", "list connectors", "connectors_registry singleton"], "state": 2, "file_id": 17, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "_Registry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^class _Registry:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^    def __init__(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "_Registry", "scopeKind": "class"}, {"_type": "tag", "name": "_registry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^_registry = _Registry()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "connectors_registry", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^def connectors_registry() -> _Registry:$/", "language": "Python", "typeref": "typename:_Registry", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^    def get(self, connector_id: str) -> Optional[BaseConnector]:$/", "language": "Python", "typeref": "typename:Optional[BaseConnector]", "kind": "member", "signature": "(self, connector_id: str)", "scope": "_Registry", "scopeKind": "class"}, {"_type": "tag", "name": "list", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^    def list(self) -> List[dict]:$/", "language": "Python", "typeref": "typename:List[dict]", "kind": "member", "signature": "(self)", "scope": "_Registry", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/connectors/registry.py", "pattern": "/^    def register(self, connector: BaseConnector) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, connector: BaseConnector)", "scope": "_Registry", "scopeKind": "class"}], "hash": "40017cee1d682c998195f9e5587c0c06", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/connectors/registry.py", "fields": [{"name": "_registry = _Registry()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"44": ""}]}