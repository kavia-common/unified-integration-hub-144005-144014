{"is_source_file": true, "format": "Python", "description": "This file provides a utility function `retry_with_backoff` to perform retries with exponential backoff for API calls or other functions that may fail temporarily.", "external_files": ["time"], "external_methods": ["time.sleep"], "published": ["retry_with_backoff"], "classes": [], "methods": [{"name": "T retry_with_backoff(fn: Callable[[], T], attempts: int = 3, base_sleep: float = 0.5, retry_on: Iterable[type[Exception]] = (Exception,))", "description": "Runs a given function with retry logic implementing exponential backoff, attempting multiple times on specified exceptions.", "scope": "", "scopeKind": ""}], "calls": ["time.sleep"], "search-terms": ["retry", "backoff", "exponential backoff", "API retries", "retry logic"], "state": 2, "file_id": 15, "knowledge_revision": 40, "git_revision": "", "ctags": [{"_type": "tag", "name": "T", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/core/retry.py", "pattern": "/^T = TypeVar(\"T\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "retry_with_backoff", "path": "/home/kavia/workspace/code-generation/unified-integration-hub-144005-144014/unified_connector_backend/app/core/retry.py", "pattern": "/^def retry_with_backoff(fn: Callable[[], T], attempts: int = 3, base_sleep: float = 0.5, retry_on/", "language": "Python", "typeref": "typename:T", "kind": "function", "signature": "(fn: Callable[[], T], attempts: int = 3, base_sleep: float = 0.5, retry_on: Iterable[type[Exception]] = (Exception,))"}], "hash": "5d355e80d009e50a8ebb612411fe17a6", "format-version": 4, "code-base-name": "unified_connector_backend", "filename": "unified_connector_backend/app/core/retry.py", "fields": [{"name": "T = TypeVar(\"T\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"40": ""}]}